<?php

/**
 * @file
 * Contains vppn.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function vppn_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the vppn module.
    case 'help.page.vppn':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('View Permissions Per Node') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function vppn_form_node_page_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Make sure it's a valid type.
  if (!\Drupal::service('vppn.handler')->checkIfContentTypeEnabled($form)) {
    // Not a VPPN form.
    return;
  }
  $form['vppn'] = array(
    '#type' => 'details',
    '#title' => t('View access'),
    '#group' => 'advanced',
    '#open' => FALSE,
    'markup' => array(
      '#markup' => '<p>Random Markup</p>',
    ),
  );
  $form['vppn']['description']= array(
    '#prefix' => '<div class="form-item">',
    '#suffix' => '</div>',
    '#markup' => t('Select which roles can view this node.  Select none for default.'),
  );
  // Get the default roles.
  $default_roles = \Drupal::service('vppn.handler')->getDefaultsForNode($form);
  $default_roles = $default_roles ? $default_roles : array();
  // Role checkboxes.
  $form['vppn']['vppn_roles'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Select roles'),
    '#title_display' => 'invisible',
    '#options' => array(),
    '#default_value' => $default_roles,
  );
  // Get all user roles.
  $user_roles = user_roles(TRUE);
  // Get users that can bypass access control (skip anon - that would be weird).
  $user_roles_bypass = user_roles(TRUE, 'bypass node access');
  // Remove the users that can bypass access control.
  $user_roles = array_diff_key($user_roles, $user_roles_bypass);
  // Each non-bypass role.
  foreach ($user_roles as $role_id => $role_obj) {
    $form['vppn']['vppn_roles']['#options'][$role_id] = $role_obj->label();
  }
  // Add submission handler.
  $form['actions']['submit']['#submit'][] = 'vppn_node_form_submit';
}






/**
 * Implements hook_form_FORM_ID_alter().
 */
function vppn_form_node_page_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  return FALSE;
}




function vppn_node_form_submit($form, \Drupal\Core\Form\FormStateInterface $form_state){
  //@todo salvare aggiornamenti dati√π
  $a=1;

}


